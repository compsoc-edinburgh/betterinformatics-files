# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import people_pb2 as people__pb2


class PeopleStub(object):
  """An API key must be provided in an "authorization" header in GRPC metadata.

  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetEthPerson = channel.unary_unary(
        '/people.People/GetEthPerson',
        request_serializer=people__pb2.GetPersonRequest.SerializeToString,
        response_deserializer=people__pb2.EthPerson.FromString,
        )
    self.AuthEthPerson = channel.unary_unary(
        '/people.People/AuthEthPerson',
        request_serializer=people__pb2.AuthPersonRequest.SerializeToString,
        response_deserializer=people__pb2.AuthPersonResponse.FromString,
        )
    self.GetVisPerson = channel.unary_unary(
        '/people.People/GetVisPerson',
        request_serializer=people__pb2.GetPersonRequest.SerializeToString,
        response_deserializer=people__pb2.VisPerson.FromString,
        )
    self.AuthVisPerson = channel.unary_unary(
        '/people.People/AuthVisPerson',
        request_serializer=people__pb2.AuthPersonRequest.SerializeToString,
        response_deserializer=people__pb2.AuthPersonResponse.FromString,
        )
    self.ListVisPeople = channel.unary_stream(
        '/people.People/ListVisPeople',
        request_serializer=people__pb2.ListPeopleRequest.SerializeToString,
        response_deserializer=people__pb2.VisPerson.FromString,
        )
    self.CreateVisPerson = channel.unary_unary(
        '/people.People/CreateVisPerson',
        request_serializer=people__pb2.CreateVisPersonRequest.SerializeToString,
        response_deserializer=people__pb2.Empty.FromString,
        )
    self.ModifyVisPerson = channel.unary_unary(
        '/people.People/ModifyVisPerson',
        request_serializer=people__pb2.ModifyVisPersonRequest.SerializeToString,
        response_deserializer=people__pb2.Empty.FromString,
        )
    self.DeletePreserveVisPerson = channel.unary_unary(
        '/people.People/DeletePreserveVisPerson',
        request_serializer=people__pb2.WrappedUsername.SerializeToString,
        response_deserializer=people__pb2.Empty.FromString,
        )
    self.UndeletePreservedVisPerson = channel.unary_unary(
        '/people.People/UndeletePreservedVisPerson',
        request_serializer=people__pb2.WrappedUsername.SerializeToString,
        response_deserializer=people__pb2.Empty.FromString,
        )
    self.GetAlumniPerson = channel.unary_unary(
        '/people.People/GetAlumniPerson',
        request_serializer=people__pb2.GetPersonRequest.SerializeToString,
        response_deserializer=people__pb2.AlumniPerson.FromString,
        )
    self.AuthAlumniPerson = channel.unary_unary(
        '/people.People/AuthAlumniPerson',
        request_serializer=people__pb2.AuthPersonRequest.SerializeToString,
        response_deserializer=people__pb2.AuthPersonResponse.FromString,
        )
    self.ListAlumniPeople = channel.unary_stream(
        '/people.People/ListAlumniPeople',
        request_serializer=people__pb2.ListPeopleRequest.SerializeToString,
        response_deserializer=people__pb2.AlumniPerson.FromString,
        )
    self.CreateAlumniPerson = channel.unary_unary(
        '/people.People/CreateAlumniPerson',
        request_serializer=people__pb2.CreateAlumniPersonRequest.SerializeToString,
        response_deserializer=people__pb2.Empty.FromString,
        )
    self.ModifyAlumniPerson = channel.unary_unary(
        '/people.People/ModifyAlumniPerson',
        request_serializer=people__pb2.ModifyAlumniPersonRequest.SerializeToString,
        response_deserializer=people__pb2.Empty.FromString,
        )
    self.DeletePreserveAlumniPerson = channel.unary_unary(
        '/people.People/DeletePreserveAlumniPerson',
        request_serializer=people__pb2.WrappedUsername.SerializeToString,
        response_deserializer=people__pb2.Empty.FromString,
        )
    self.UndeletePreservedAlumniPerson = channel.unary_unary(
        '/people.People/UndeletePreservedAlumniPerson',
        request_serializer=people__pb2.WrappedUsername.SerializeToString,
        response_deserializer=people__pb2.Empty.FromString,
        )
    self.ModifyServiceAccount = channel.unary_unary(
        '/people.People/ModifyServiceAccount',
        request_serializer=people__pb2.ModifyServiceAccountRequest.SerializeToString,
        response_deserializer=people__pb2.Empty.FromString,
        )
    self.CheckLiveness = channel.unary_unary(
        '/people.People/CheckLiveness',
        request_serializer=people__pb2.Empty.SerializeToString,
        response_deserializer=people__pb2.Empty.FromString,
        )
    self.CheckReadiness = channel.unary_unary(
        '/people.People/CheckReadiness',
        request_serializer=people__pb2.Empty.SerializeToString,
        response_deserializer=people__pb2.Empty.FromString,
        )


class PeopleServicer(object):
  """An API key must be provided in an "authorization" header in GRPC metadata.

  """

  def GetEthPerson(self, request, context):
    """ETH person

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AuthEthPerson(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetVisPerson(self, request, context):
    """VIS person

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AuthVisPerson(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListVisPeople(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateVisPerson(self, request, context):
    """requires privileged API key
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ModifyVisPerson(self, request, context):
    """requires privileged API key
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeletePreserveVisPerson(self, request, context):
    """DeletePreserveVisPerson deletes the specified VIS internal account.
    The deletion which moves the person to a "preserved" section in the
    storage backend, instead of actually deleting them.
    *Preserved people loose all their group memberships.*
    Preserved people look deleted in all API calls, except UndeletePreserveVisPerson.
    Background jobs or manual intervention may or may not eventually delete the person.
    If only a sort time has passed, it should normally be possible to recover the
    preserved person using UndeletePreservedVisPerson.
    If the person doesn't exist or is already "preserved" this RPC will fail.
    requires privileged API key
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UndeletePreservedVisPerson(self, request, context):
    """UndeletePreservedVisPerson reverses the effect of DeletePreserveVisPerson
    (except that all group memberships are lost).
    If the person has already been permanently deleted (eg. manually directly
    in the data store, or by a cleanup service), undeletion will fail.
    If the person doesn't exist this RPC will fail.
    When a person is preserved, their username stays reserved (no new user can be
    created with that username, until the preserved user is permanently deleted).
    Due to implementation constraints, *calling this on preserved Alumni users
    will convert them to VIS users, do not do this.*
    requires privileged API key
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAlumniPerson(self, request, context):
    """Alumni person (VIS alumni)

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AuthAlumniPerson(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListAlumniPeople(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateAlumniPerson(self, request, context):
    """requires privileged API key
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ModifyAlumniPerson(self, request, context):
    """requires privileged API key
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeletePreserveAlumniPerson(self, request, context):
    """DeletePreserveAlumniPerson deletes the specified VIS internal account.
    The deletion which moves the person to a "preserved" section in the
    storage backend, instead of actually deleting them.
    *Preserved people loose all their group memberships.*
    Preserved people look deleted in all API calls, except UndeletePreserveAlumniPerson.
    Background jobs or manual intervention may or may not eventually delete the person.
    If only a sort time has passed, it should normally be possible to recover the
    preserved person using UndeletePreservedAlumniPerson.
    If the person doesn't exist or is already "preserved" this RPC will fail.
    requires privileged API key
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UndeletePreservedAlumniPerson(self, request, context):
    """UndeletePreservedAlumniPerson reverses the effect of DeletePreserveAlumniPerson
    (except that all group memberships are lost).
    If the person has already been permanently deleted (eg. manually directly
    in the data store, or by a cleanup service), undeletion will fail.
    If the person doesn't exist this RPC will fail.
    When a person is preserved, their username stays reserved (no new user can be
    created with that username, until the preserved user is permanently deleted).
    Due to implementation constraints, *calling this on preserved VIS users
    will convert them to Alumni users, do not do this.*
    requires privileged API key
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ModifyServiceAccount(self, request, context):
    """Service account

    ModifyServiceAccount is not something you should use.
    It is made specifically for mailman to update email addresses in
    FreeIPA which are required to correctly route emails for mailing lists.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CheckLiveness(self, request, context):
    """Miscellaneous

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CheckReadiness(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PeopleServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetEthPerson': grpc.unary_unary_rpc_method_handler(
          servicer.GetEthPerson,
          request_deserializer=people__pb2.GetPersonRequest.FromString,
          response_serializer=people__pb2.EthPerson.SerializeToString,
      ),
      'AuthEthPerson': grpc.unary_unary_rpc_method_handler(
          servicer.AuthEthPerson,
          request_deserializer=people__pb2.AuthPersonRequest.FromString,
          response_serializer=people__pb2.AuthPersonResponse.SerializeToString,
      ),
      'GetVisPerson': grpc.unary_unary_rpc_method_handler(
          servicer.GetVisPerson,
          request_deserializer=people__pb2.GetPersonRequest.FromString,
          response_serializer=people__pb2.VisPerson.SerializeToString,
      ),
      'AuthVisPerson': grpc.unary_unary_rpc_method_handler(
          servicer.AuthVisPerson,
          request_deserializer=people__pb2.AuthPersonRequest.FromString,
          response_serializer=people__pb2.AuthPersonResponse.SerializeToString,
      ),
      'ListVisPeople': grpc.unary_stream_rpc_method_handler(
          servicer.ListVisPeople,
          request_deserializer=people__pb2.ListPeopleRequest.FromString,
          response_serializer=people__pb2.VisPerson.SerializeToString,
      ),
      'CreateVisPerson': grpc.unary_unary_rpc_method_handler(
          servicer.CreateVisPerson,
          request_deserializer=people__pb2.CreateVisPersonRequest.FromString,
          response_serializer=people__pb2.Empty.SerializeToString,
      ),
      'ModifyVisPerson': grpc.unary_unary_rpc_method_handler(
          servicer.ModifyVisPerson,
          request_deserializer=people__pb2.ModifyVisPersonRequest.FromString,
          response_serializer=people__pb2.Empty.SerializeToString,
      ),
      'DeletePreserveVisPerson': grpc.unary_unary_rpc_method_handler(
          servicer.DeletePreserveVisPerson,
          request_deserializer=people__pb2.WrappedUsername.FromString,
          response_serializer=people__pb2.Empty.SerializeToString,
      ),
      'UndeletePreservedVisPerson': grpc.unary_unary_rpc_method_handler(
          servicer.UndeletePreservedVisPerson,
          request_deserializer=people__pb2.WrappedUsername.FromString,
          response_serializer=people__pb2.Empty.SerializeToString,
      ),
      'GetAlumniPerson': grpc.unary_unary_rpc_method_handler(
          servicer.GetAlumniPerson,
          request_deserializer=people__pb2.GetPersonRequest.FromString,
          response_serializer=people__pb2.AlumniPerson.SerializeToString,
      ),
      'AuthAlumniPerson': grpc.unary_unary_rpc_method_handler(
          servicer.AuthAlumniPerson,
          request_deserializer=people__pb2.AuthPersonRequest.FromString,
          response_serializer=people__pb2.AuthPersonResponse.SerializeToString,
      ),
      'ListAlumniPeople': grpc.unary_stream_rpc_method_handler(
          servicer.ListAlumniPeople,
          request_deserializer=people__pb2.ListPeopleRequest.FromString,
          response_serializer=people__pb2.AlumniPerson.SerializeToString,
      ),
      'CreateAlumniPerson': grpc.unary_unary_rpc_method_handler(
          servicer.CreateAlumniPerson,
          request_deserializer=people__pb2.CreateAlumniPersonRequest.FromString,
          response_serializer=people__pb2.Empty.SerializeToString,
      ),
      'ModifyAlumniPerson': grpc.unary_unary_rpc_method_handler(
          servicer.ModifyAlumniPerson,
          request_deserializer=people__pb2.ModifyAlumniPersonRequest.FromString,
          response_serializer=people__pb2.Empty.SerializeToString,
      ),
      'DeletePreserveAlumniPerson': grpc.unary_unary_rpc_method_handler(
          servicer.DeletePreserveAlumniPerson,
          request_deserializer=people__pb2.WrappedUsername.FromString,
          response_serializer=people__pb2.Empty.SerializeToString,
      ),
      'UndeletePreservedAlumniPerson': grpc.unary_unary_rpc_method_handler(
          servicer.UndeletePreservedAlumniPerson,
          request_deserializer=people__pb2.WrappedUsername.FromString,
          response_serializer=people__pb2.Empty.SerializeToString,
      ),
      'ModifyServiceAccount': grpc.unary_unary_rpc_method_handler(
          servicer.ModifyServiceAccount,
          request_deserializer=people__pb2.ModifyServiceAccountRequest.FromString,
          response_serializer=people__pb2.Empty.SerializeToString,
      ),
      'CheckLiveness': grpc.unary_unary_rpc_method_handler(
          servicer.CheckLiveness,
          request_deserializer=people__pb2.Empty.FromString,
          response_serializer=people__pb2.Empty.SerializeToString,
      ),
      'CheckReadiness': grpc.unary_unary_rpc_method_handler(
          servicer.CheckReadiness,
          request_deserializer=people__pb2.Empty.FromString,
          response_serializer=people__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'people.People', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
