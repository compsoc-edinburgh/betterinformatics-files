# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: people.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='people.proto',
  package='people',
  syntax='proto3',
  serialized_pb=_b('\n\x0cpeople.proto\x12\x06people\"$\n\x13RepeatedStringValue\x12\r\n\x05value\x18\x01 \x03(\t\"\x1c\n\x0bStringValue\x12\r\n\x05value\x18\x01 \x01(\t\"\x07\n\x05\x45mpty\"$\n\x10GetPersonRequest\x12\x10\n\x08username\x18\x01 \x01(\t\"\x13\n\x11ListPeopleRequest\"\'\n\x13\x44\x65letePersonRequest\x12\x10\n\x08username\x18\x01 \x01(\t\"7\n\x11\x41uthPersonRequest\x12\x10\n\x08username\x18\x01 \x01(\t\x12\x10\n\x08password\x18\x02 \x01(\t\" \n\x12\x41uthPersonResponse\x12\n\n\x02ok\x18\x01 \x01(\x08\"#\n\x0fWrappedUsername\x12\x10\n\x08username\x18\x01 \x01(\t\"\xf4\x01\n\tEthPerson\x12\x12\n\nfirst_name\x18\x01 \x01(\t\x12\x11\n\tlast_name\x18\x02 \x01(\t\x12.\n\x0evis_membership\x18\n \x01(\x0e\x32\x16.people.MembershipType\x12\x12\n\nvis_active\x18\x0b \x01(\x08\x12\x10\n\x08username\x18\x05 \x01(\t\x12\r\n\x05\x65mail\x18\x06 \x01(\t\x12,\n\x12preferred_language\x18\x07 \x01(\x0e\x32\x10.people.Language\x12\x14\n\x0cunique_id_nr\x18\x08 \x01(\x05\x12\x11\n\tunique_id\x18\t \x01(\tJ\x04\x08\x03\x10\x04\"\xcf\x01\n\tVisPerson\x12\x12\n\nfirst_name\x18\x01 \x01(\t\x12\x11\n\tlast_name\x18\x02 \x01(\t\x12\x10\n\x08username\x18\x05 \x01(\t\x12.\n\x0evis_membership\x18\x03 \x01(\x0e\x32\x16.people.MembershipType\x12\x12\n\nvis_active\x18\x06 \x01(\x08\x12\x12\n\nvis_groups\x18\x04 \x03(\t\x12\x15\n\rprimary_email\x18\x08 \x01(\t\x12\x1a\n\x12\x61lternative_emails\x18\x07 \x03(\t\"s\n\x16\x43reateVisPersonRequest\x12\x12\n\nfirst_name\x18\x01 \x01(\t\x12\x11\n\tlast_name\x18\x02 \x01(\t\x12\x10\n\x08username\x18\x05 \x01(\t\x12\x1a\n\x12\x61lternative_emails\x18\x07 \x03(\tJ\x04\x08\x04\x10\x05\"\xa6\x01\n\x16ModifyVisPersonRequest\x12\x10\n\x08username\x18\x01 \x01(\t\x12\x10\n\x08password\x18\x02 \x01(\t\x12\x37\n\x12\x61lternative_emails\x18\x03 \x01(\x0b\x32\x1b.people.RepeatedStringValue\x12\x14\n\x0c\x61\x64\x64_to_group\x18\x04 \x01(\t\x12\x19\n\x11remove_from_group\x18\x05 \x01(\t\"\x92\x01\n\x0c\x41lumniPerson\x12\x12\n\nfirst_name\x18\x01 \x01(\t\x12\x11\n\tlast_name\x18\x02 \x01(\t\x12\x10\n\x08username\x18\x05 \x01(\t\x12\x15\n\rprimary_email\x18\x08 \x01(\t\x12\x1a\n\x12\x61lternative_emails\x18\x07 \x03(\t\x12\x16\n\x0estreet_address\x18\x03 \x01(\t\"\x88\x01\n\x19\x43reateAlumniPersonRequest\x12\x12\n\nfirst_name\x18\x01 \x01(\t\x12\x11\n\tlast_name\x18\x02 \x01(\t\x12\x10\n\x08username\x18\x05 \x01(\t\x12\x1a\n\x12\x61lternative_emails\x18\x07 \x03(\t\x12\x16\n\x0estreet_address\x18\x03 \x01(\t\"\xa5\x01\n\x19ModifyAlumniPersonRequest\x12\x10\n\x08username\x18\x01 \x01(\t\x12\x10\n\x08password\x18\x02 \x01(\t\x12\x37\n\x12\x61lternative_emails\x18\x03 \x01(\x0b\x32\x1b.people.RepeatedStringValue\x12+\n\x0estreet_address\x18\x04 \x01(\x0b\x32\x13.people.StringValue\"h\n\x1bModifyServiceAccountRequest\x12\x10\n\x08username\x18\x01 \x01(\t\x12\x37\n\x12\x61lternative_emails\x18\x03 \x01(\x0b\x32\x1b.people.RepeatedStringValue*^\n\x0eMembershipType\x12\x08\n\x04NONE\x10\x00\x12\x19\n\x11\x41\x43TIVE_DO_NOT_USE\x10\x01\x1a\x02\x08\x01\x12\x0b\n\x07PASSIVE\x10\x02\x12\x0c\n\x08HONORARY\x10\x03\x12\x0c\n\x08ORDINARY\x10\x04*<\n\x08Language\x12\n\n\x06GERMAN\x10\x00\x12\n\n\x06\x46RENCH\x10\x01\x12\x0b\n\x07ITALIAN\x10\x02\x12\x0b\n\x07\x45NGLISH\x10\x03\x32\xff\t\n\x06People\x12;\n\x0cGetEthPerson\x12\x18.people.GetPersonRequest\x1a\x11.people.EthPerson\x12\x46\n\rAuthEthPerson\x12\x19.people.AuthPersonRequest\x1a\x1a.people.AuthPersonResponse\x12;\n\x0cGetVisPerson\x12\x18.people.GetPersonRequest\x1a\x11.people.VisPerson\x12\x46\n\rAuthVisPerson\x12\x19.people.AuthPersonRequest\x1a\x1a.people.AuthPersonResponse\x12?\n\rListVisPeople\x12\x19.people.ListPeopleRequest\x1a\x11.people.VisPerson0\x01\x12@\n\x0f\x43reateVisPerson\x12\x1e.people.CreateVisPersonRequest\x1a\r.people.Empty\x12@\n\x0fModifyVisPerson\x12\x1e.people.ModifyVisPersonRequest\x1a\r.people.Empty\x12\x41\n\x17\x44\x65letePreserveVisPerson\x12\x17.people.WrappedUsername\x1a\r.people.Empty\x12\x44\n\x1aUndeletePreservedVisPerson\x12\x17.people.WrappedUsername\x1a\r.people.Empty\x12\x41\n\x0fGetAlumniPerson\x12\x18.people.GetPersonRequest\x1a\x14.people.AlumniPerson\x12I\n\x10\x41uthAlumniPerson\x12\x19.people.AuthPersonRequest\x1a\x1a.people.AuthPersonResponse\x12\x45\n\x10ListAlumniPeople\x12\x19.people.ListPeopleRequest\x1a\x14.people.AlumniPerson0\x01\x12\x46\n\x12\x43reateAlumniPerson\x12!.people.CreateAlumniPersonRequest\x1a\r.people.Empty\x12\x46\n\x12ModifyAlumniPerson\x12!.people.ModifyAlumniPersonRequest\x1a\r.people.Empty\x12\x44\n\x1a\x44\x65letePreserveAlumniPerson\x12\x17.people.WrappedUsername\x1a\r.people.Empty\x12G\n\x1dUndeletePreservedAlumniPerson\x12\x17.people.WrappedUsername\x1a\r.people.Empty\x12J\n\x14ModifyServiceAccount\x12#.people.ModifyServiceAccountRequest\x1a\r.people.Empty\x12-\n\rCheckLiveness\x12\r.people.Empty\x1a\r.people.Empty\x12.\n\x0e\x43heckReadiness\x12\r.people.Empty\x1a\r.people.Emptyb\x06proto3')
)

_MEMBERSHIPTYPE = _descriptor.EnumDescriptor(
  name='MembershipType',
  full_name='people.MembershipType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACTIVE_DO_NOT_USE', index=1, number=1,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\010\001')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PASSIVE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HONORARY', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ORDINARY', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1634,
  serialized_end=1728,
)
_sym_db.RegisterEnumDescriptor(_MEMBERSHIPTYPE)

MembershipType = enum_type_wrapper.EnumTypeWrapper(_MEMBERSHIPTYPE)
_LANGUAGE = _descriptor.EnumDescriptor(
  name='Language',
  full_name='people.Language',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='GERMAN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FRENCH', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ITALIAN', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ENGLISH', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1730,
  serialized_end=1790,
)
_sym_db.RegisterEnumDescriptor(_LANGUAGE)

Language = enum_type_wrapper.EnumTypeWrapper(_LANGUAGE)
NONE = 0
ACTIVE_DO_NOT_USE = 1
PASSIVE = 2
HONORARY = 3
ORDINARY = 4
GERMAN = 0
FRENCH = 1
ITALIAN = 2
ENGLISH = 3



_REPEATEDSTRINGVALUE = _descriptor.Descriptor(
  name='RepeatedStringValue',
  full_name='people.RepeatedStringValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='people.RepeatedStringValue.value', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=60,
)


_STRINGVALUE = _descriptor.Descriptor(
  name='StringValue',
  full_name='people.StringValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='people.StringValue.value', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=62,
  serialized_end=90,
)


_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='people.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=92,
  serialized_end=99,
)


_GETPERSONREQUEST = _descriptor.Descriptor(
  name='GetPersonRequest',
  full_name='people.GetPersonRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='username', full_name='people.GetPersonRequest.username', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=101,
  serialized_end=137,
)


_LISTPEOPLEREQUEST = _descriptor.Descriptor(
  name='ListPeopleRequest',
  full_name='people.ListPeopleRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=139,
  serialized_end=158,
)


_DELETEPERSONREQUEST = _descriptor.Descriptor(
  name='DeletePersonRequest',
  full_name='people.DeletePersonRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='username', full_name='people.DeletePersonRequest.username', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=160,
  serialized_end=199,
)


_AUTHPERSONREQUEST = _descriptor.Descriptor(
  name='AuthPersonRequest',
  full_name='people.AuthPersonRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='username', full_name='people.AuthPersonRequest.username', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='password', full_name='people.AuthPersonRequest.password', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=201,
  serialized_end=256,
)


_AUTHPERSONRESPONSE = _descriptor.Descriptor(
  name='AuthPersonResponse',
  full_name='people.AuthPersonResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ok', full_name='people.AuthPersonResponse.ok', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=258,
  serialized_end=290,
)


_WRAPPEDUSERNAME = _descriptor.Descriptor(
  name='WrappedUsername',
  full_name='people.WrappedUsername',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='username', full_name='people.WrappedUsername.username', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=292,
  serialized_end=327,
)


_ETHPERSON = _descriptor.Descriptor(
  name='EthPerson',
  full_name='people.EthPerson',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='first_name', full_name='people.EthPerson.first_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_name', full_name='people.EthPerson.last_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vis_membership', full_name='people.EthPerson.vis_membership', index=2,
      number=10, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vis_active', full_name='people.EthPerson.vis_active', index=3,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='username', full_name='people.EthPerson.username', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='email', full_name='people.EthPerson.email', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='preferred_language', full_name='people.EthPerson.preferred_language', index=6,
      number=7, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='unique_id_nr', full_name='people.EthPerson.unique_id_nr', index=7,
      number=8, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='unique_id', full_name='people.EthPerson.unique_id', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=330,
  serialized_end=574,
)


_VISPERSON = _descriptor.Descriptor(
  name='VisPerson',
  full_name='people.VisPerson',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='first_name', full_name='people.VisPerson.first_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_name', full_name='people.VisPerson.last_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='username', full_name='people.VisPerson.username', index=2,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vis_membership', full_name='people.VisPerson.vis_membership', index=3,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vis_active', full_name='people.VisPerson.vis_active', index=4,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vis_groups', full_name='people.VisPerson.vis_groups', index=5,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='primary_email', full_name='people.VisPerson.primary_email', index=6,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='alternative_emails', full_name='people.VisPerson.alternative_emails', index=7,
      number=7, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=577,
  serialized_end=784,
)


_CREATEVISPERSONREQUEST = _descriptor.Descriptor(
  name='CreateVisPersonRequest',
  full_name='people.CreateVisPersonRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='first_name', full_name='people.CreateVisPersonRequest.first_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_name', full_name='people.CreateVisPersonRequest.last_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='username', full_name='people.CreateVisPersonRequest.username', index=2,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='alternative_emails', full_name='people.CreateVisPersonRequest.alternative_emails', index=3,
      number=7, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=786,
  serialized_end=901,
)


_MODIFYVISPERSONREQUEST = _descriptor.Descriptor(
  name='ModifyVisPersonRequest',
  full_name='people.ModifyVisPersonRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='username', full_name='people.ModifyVisPersonRequest.username', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='password', full_name='people.ModifyVisPersonRequest.password', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='alternative_emails', full_name='people.ModifyVisPersonRequest.alternative_emails', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='add_to_group', full_name='people.ModifyVisPersonRequest.add_to_group', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='remove_from_group', full_name='people.ModifyVisPersonRequest.remove_from_group', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=904,
  serialized_end=1070,
)


_ALUMNIPERSON = _descriptor.Descriptor(
  name='AlumniPerson',
  full_name='people.AlumniPerson',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='first_name', full_name='people.AlumniPerson.first_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_name', full_name='people.AlumniPerson.last_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='username', full_name='people.AlumniPerson.username', index=2,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='primary_email', full_name='people.AlumniPerson.primary_email', index=3,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='alternative_emails', full_name='people.AlumniPerson.alternative_emails', index=4,
      number=7, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='street_address', full_name='people.AlumniPerson.street_address', index=5,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1073,
  serialized_end=1219,
)


_CREATEALUMNIPERSONREQUEST = _descriptor.Descriptor(
  name='CreateAlumniPersonRequest',
  full_name='people.CreateAlumniPersonRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='first_name', full_name='people.CreateAlumniPersonRequest.first_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_name', full_name='people.CreateAlumniPersonRequest.last_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='username', full_name='people.CreateAlumniPersonRequest.username', index=2,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='alternative_emails', full_name='people.CreateAlumniPersonRequest.alternative_emails', index=3,
      number=7, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='street_address', full_name='people.CreateAlumniPersonRequest.street_address', index=4,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1222,
  serialized_end=1358,
)


_MODIFYALUMNIPERSONREQUEST = _descriptor.Descriptor(
  name='ModifyAlumniPersonRequest',
  full_name='people.ModifyAlumniPersonRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='username', full_name='people.ModifyAlumniPersonRequest.username', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='password', full_name='people.ModifyAlumniPersonRequest.password', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='alternative_emails', full_name='people.ModifyAlumniPersonRequest.alternative_emails', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='street_address', full_name='people.ModifyAlumniPersonRequest.street_address', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1361,
  serialized_end=1526,
)


_MODIFYSERVICEACCOUNTREQUEST = _descriptor.Descriptor(
  name='ModifyServiceAccountRequest',
  full_name='people.ModifyServiceAccountRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='username', full_name='people.ModifyServiceAccountRequest.username', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='alternative_emails', full_name='people.ModifyServiceAccountRequest.alternative_emails', index=1,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1528,
  serialized_end=1632,
)

_ETHPERSON.fields_by_name['vis_membership'].enum_type = _MEMBERSHIPTYPE
_ETHPERSON.fields_by_name['preferred_language'].enum_type = _LANGUAGE
_VISPERSON.fields_by_name['vis_membership'].enum_type = _MEMBERSHIPTYPE
_MODIFYVISPERSONREQUEST.fields_by_name['alternative_emails'].message_type = _REPEATEDSTRINGVALUE
_MODIFYALUMNIPERSONREQUEST.fields_by_name['alternative_emails'].message_type = _REPEATEDSTRINGVALUE
_MODIFYALUMNIPERSONREQUEST.fields_by_name['street_address'].message_type = _STRINGVALUE
_MODIFYSERVICEACCOUNTREQUEST.fields_by_name['alternative_emails'].message_type = _REPEATEDSTRINGVALUE
DESCRIPTOR.message_types_by_name['RepeatedStringValue'] = _REPEATEDSTRINGVALUE
DESCRIPTOR.message_types_by_name['StringValue'] = _STRINGVALUE
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['GetPersonRequest'] = _GETPERSONREQUEST
DESCRIPTOR.message_types_by_name['ListPeopleRequest'] = _LISTPEOPLEREQUEST
DESCRIPTOR.message_types_by_name['DeletePersonRequest'] = _DELETEPERSONREQUEST
DESCRIPTOR.message_types_by_name['AuthPersonRequest'] = _AUTHPERSONREQUEST
DESCRIPTOR.message_types_by_name['AuthPersonResponse'] = _AUTHPERSONRESPONSE
DESCRIPTOR.message_types_by_name['WrappedUsername'] = _WRAPPEDUSERNAME
DESCRIPTOR.message_types_by_name['EthPerson'] = _ETHPERSON
DESCRIPTOR.message_types_by_name['VisPerson'] = _VISPERSON
DESCRIPTOR.message_types_by_name['CreateVisPersonRequest'] = _CREATEVISPERSONREQUEST
DESCRIPTOR.message_types_by_name['ModifyVisPersonRequest'] = _MODIFYVISPERSONREQUEST
DESCRIPTOR.message_types_by_name['AlumniPerson'] = _ALUMNIPERSON
DESCRIPTOR.message_types_by_name['CreateAlumniPersonRequest'] = _CREATEALUMNIPERSONREQUEST
DESCRIPTOR.message_types_by_name['ModifyAlumniPersonRequest'] = _MODIFYALUMNIPERSONREQUEST
DESCRIPTOR.message_types_by_name['ModifyServiceAccountRequest'] = _MODIFYSERVICEACCOUNTREQUEST
DESCRIPTOR.enum_types_by_name['MembershipType'] = _MEMBERSHIPTYPE
DESCRIPTOR.enum_types_by_name['Language'] = _LANGUAGE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

RepeatedStringValue = _reflection.GeneratedProtocolMessageType('RepeatedStringValue', (_message.Message,), dict(
  DESCRIPTOR = _REPEATEDSTRINGVALUE,
  __module__ = 'people_pb2'
  # @@protoc_insertion_point(class_scope:people.RepeatedStringValue)
  ))
_sym_db.RegisterMessage(RepeatedStringValue)

StringValue = _reflection.GeneratedProtocolMessageType('StringValue', (_message.Message,), dict(
  DESCRIPTOR = _STRINGVALUE,
  __module__ = 'people_pb2'
  # @@protoc_insertion_point(class_scope:people.StringValue)
  ))
_sym_db.RegisterMessage(StringValue)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'people_pb2'
  # @@protoc_insertion_point(class_scope:people.Empty)
  ))
_sym_db.RegisterMessage(Empty)

GetPersonRequest = _reflection.GeneratedProtocolMessageType('GetPersonRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETPERSONREQUEST,
  __module__ = 'people_pb2'
  # @@protoc_insertion_point(class_scope:people.GetPersonRequest)
  ))
_sym_db.RegisterMessage(GetPersonRequest)

ListPeopleRequest = _reflection.GeneratedProtocolMessageType('ListPeopleRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTPEOPLEREQUEST,
  __module__ = 'people_pb2'
  # @@protoc_insertion_point(class_scope:people.ListPeopleRequest)
  ))
_sym_db.RegisterMessage(ListPeopleRequest)

DeletePersonRequest = _reflection.GeneratedProtocolMessageType('DeletePersonRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETEPERSONREQUEST,
  __module__ = 'people_pb2'
  # @@protoc_insertion_point(class_scope:people.DeletePersonRequest)
  ))
_sym_db.RegisterMessage(DeletePersonRequest)

AuthPersonRequest = _reflection.GeneratedProtocolMessageType('AuthPersonRequest', (_message.Message,), dict(
  DESCRIPTOR = _AUTHPERSONREQUEST,
  __module__ = 'people_pb2'
  # @@protoc_insertion_point(class_scope:people.AuthPersonRequest)
  ))
_sym_db.RegisterMessage(AuthPersonRequest)

AuthPersonResponse = _reflection.GeneratedProtocolMessageType('AuthPersonResponse', (_message.Message,), dict(
  DESCRIPTOR = _AUTHPERSONRESPONSE,
  __module__ = 'people_pb2'
  # @@protoc_insertion_point(class_scope:people.AuthPersonResponse)
  ))
_sym_db.RegisterMessage(AuthPersonResponse)

WrappedUsername = _reflection.GeneratedProtocolMessageType('WrappedUsername', (_message.Message,), dict(
  DESCRIPTOR = _WRAPPEDUSERNAME,
  __module__ = 'people_pb2'
  # @@protoc_insertion_point(class_scope:people.WrappedUsername)
  ))
_sym_db.RegisterMessage(WrappedUsername)

EthPerson = _reflection.GeneratedProtocolMessageType('EthPerson', (_message.Message,), dict(
  DESCRIPTOR = _ETHPERSON,
  __module__ = 'people_pb2'
  # @@protoc_insertion_point(class_scope:people.EthPerson)
  ))
_sym_db.RegisterMessage(EthPerson)

VisPerson = _reflection.GeneratedProtocolMessageType('VisPerson', (_message.Message,), dict(
  DESCRIPTOR = _VISPERSON,
  __module__ = 'people_pb2'
  # @@protoc_insertion_point(class_scope:people.VisPerson)
  ))
_sym_db.RegisterMessage(VisPerson)

CreateVisPersonRequest = _reflection.GeneratedProtocolMessageType('CreateVisPersonRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATEVISPERSONREQUEST,
  __module__ = 'people_pb2'
  # @@protoc_insertion_point(class_scope:people.CreateVisPersonRequest)
  ))
_sym_db.RegisterMessage(CreateVisPersonRequest)

ModifyVisPersonRequest = _reflection.GeneratedProtocolMessageType('ModifyVisPersonRequest', (_message.Message,), dict(
  DESCRIPTOR = _MODIFYVISPERSONREQUEST,
  __module__ = 'people_pb2'
  # @@protoc_insertion_point(class_scope:people.ModifyVisPersonRequest)
  ))
_sym_db.RegisterMessage(ModifyVisPersonRequest)

AlumniPerson = _reflection.GeneratedProtocolMessageType('AlumniPerson', (_message.Message,), dict(
  DESCRIPTOR = _ALUMNIPERSON,
  __module__ = 'people_pb2'
  # @@protoc_insertion_point(class_scope:people.AlumniPerson)
  ))
_sym_db.RegisterMessage(AlumniPerson)

CreateAlumniPersonRequest = _reflection.GeneratedProtocolMessageType('CreateAlumniPersonRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATEALUMNIPERSONREQUEST,
  __module__ = 'people_pb2'
  # @@protoc_insertion_point(class_scope:people.CreateAlumniPersonRequest)
  ))
_sym_db.RegisterMessage(CreateAlumniPersonRequest)

ModifyAlumniPersonRequest = _reflection.GeneratedProtocolMessageType('ModifyAlumniPersonRequest', (_message.Message,), dict(
  DESCRIPTOR = _MODIFYALUMNIPERSONREQUEST,
  __module__ = 'people_pb2'
  # @@protoc_insertion_point(class_scope:people.ModifyAlumniPersonRequest)
  ))
_sym_db.RegisterMessage(ModifyAlumniPersonRequest)

ModifyServiceAccountRequest = _reflection.GeneratedProtocolMessageType('ModifyServiceAccountRequest', (_message.Message,), dict(
  DESCRIPTOR = _MODIFYSERVICEACCOUNTREQUEST,
  __module__ = 'people_pb2'
  # @@protoc_insertion_point(class_scope:people.ModifyServiceAccountRequest)
  ))
_sym_db.RegisterMessage(ModifyServiceAccountRequest)


_MEMBERSHIPTYPE.values_by_name["ACTIVE_DO_NOT_USE"].has_options = True
_MEMBERSHIPTYPE.values_by_name["ACTIVE_DO_NOT_USE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\010\001'))

_PEOPLE = _descriptor.ServiceDescriptor(
  name='People',
  full_name='people.People',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=1793,
  serialized_end=3072,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetEthPerson',
    full_name='people.People.GetEthPerson',
    index=0,
    containing_service=None,
    input_type=_GETPERSONREQUEST,
    output_type=_ETHPERSON,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AuthEthPerson',
    full_name='people.People.AuthEthPerson',
    index=1,
    containing_service=None,
    input_type=_AUTHPERSONREQUEST,
    output_type=_AUTHPERSONRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetVisPerson',
    full_name='people.People.GetVisPerson',
    index=2,
    containing_service=None,
    input_type=_GETPERSONREQUEST,
    output_type=_VISPERSON,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AuthVisPerson',
    full_name='people.People.AuthVisPerson',
    index=3,
    containing_service=None,
    input_type=_AUTHPERSONREQUEST,
    output_type=_AUTHPERSONRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ListVisPeople',
    full_name='people.People.ListVisPeople',
    index=4,
    containing_service=None,
    input_type=_LISTPEOPLEREQUEST,
    output_type=_VISPERSON,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CreateVisPerson',
    full_name='people.People.CreateVisPerson',
    index=5,
    containing_service=None,
    input_type=_CREATEVISPERSONREQUEST,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ModifyVisPerson',
    full_name='people.People.ModifyVisPerson',
    index=6,
    containing_service=None,
    input_type=_MODIFYVISPERSONREQUEST,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DeletePreserveVisPerson',
    full_name='people.People.DeletePreserveVisPerson',
    index=7,
    containing_service=None,
    input_type=_WRAPPEDUSERNAME,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UndeletePreservedVisPerson',
    full_name='people.People.UndeletePreservedVisPerson',
    index=8,
    containing_service=None,
    input_type=_WRAPPEDUSERNAME,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAlumniPerson',
    full_name='people.People.GetAlumniPerson',
    index=9,
    containing_service=None,
    input_type=_GETPERSONREQUEST,
    output_type=_ALUMNIPERSON,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AuthAlumniPerson',
    full_name='people.People.AuthAlumniPerson',
    index=10,
    containing_service=None,
    input_type=_AUTHPERSONREQUEST,
    output_type=_AUTHPERSONRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ListAlumniPeople',
    full_name='people.People.ListAlumniPeople',
    index=11,
    containing_service=None,
    input_type=_LISTPEOPLEREQUEST,
    output_type=_ALUMNIPERSON,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CreateAlumniPerson',
    full_name='people.People.CreateAlumniPerson',
    index=12,
    containing_service=None,
    input_type=_CREATEALUMNIPERSONREQUEST,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ModifyAlumniPerson',
    full_name='people.People.ModifyAlumniPerson',
    index=13,
    containing_service=None,
    input_type=_MODIFYALUMNIPERSONREQUEST,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DeletePreserveAlumniPerson',
    full_name='people.People.DeletePreserveAlumniPerson',
    index=14,
    containing_service=None,
    input_type=_WRAPPEDUSERNAME,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UndeletePreservedAlumniPerson',
    full_name='people.People.UndeletePreservedAlumniPerson',
    index=15,
    containing_service=None,
    input_type=_WRAPPEDUSERNAME,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ModifyServiceAccount',
    full_name='people.People.ModifyServiceAccount',
    index=16,
    containing_service=None,
    input_type=_MODIFYSERVICEACCOUNTREQUEST,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CheckLiveness',
    full_name='people.People.CheckLiveness',
    index=17,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CheckReadiness',
    full_name='people.People.CheckReadiness',
    index=18,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_EMPTY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_PEOPLE)

DESCRIPTOR.services_by_name['People'] = _PEOPLE

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class PeopleStub(object):
    """An API key must be provided in an "authorization" header in GRPC metadata.

    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetEthPerson = channel.unary_unary(
          '/people.People/GetEthPerson',
          request_serializer=GetPersonRequest.SerializeToString,
          response_deserializer=EthPerson.FromString,
          )
      self.AuthEthPerson = channel.unary_unary(
          '/people.People/AuthEthPerson',
          request_serializer=AuthPersonRequest.SerializeToString,
          response_deserializer=AuthPersonResponse.FromString,
          )
      self.GetVisPerson = channel.unary_unary(
          '/people.People/GetVisPerson',
          request_serializer=GetPersonRequest.SerializeToString,
          response_deserializer=VisPerson.FromString,
          )
      self.AuthVisPerson = channel.unary_unary(
          '/people.People/AuthVisPerson',
          request_serializer=AuthPersonRequest.SerializeToString,
          response_deserializer=AuthPersonResponse.FromString,
          )
      self.ListVisPeople = channel.unary_stream(
          '/people.People/ListVisPeople',
          request_serializer=ListPeopleRequest.SerializeToString,
          response_deserializer=VisPerson.FromString,
          )
      self.CreateVisPerson = channel.unary_unary(
          '/people.People/CreateVisPerson',
          request_serializer=CreateVisPersonRequest.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.ModifyVisPerson = channel.unary_unary(
          '/people.People/ModifyVisPerson',
          request_serializer=ModifyVisPersonRequest.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.DeletePreserveVisPerson = channel.unary_unary(
          '/people.People/DeletePreserveVisPerson',
          request_serializer=WrappedUsername.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.UndeletePreservedVisPerson = channel.unary_unary(
          '/people.People/UndeletePreservedVisPerson',
          request_serializer=WrappedUsername.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.GetAlumniPerson = channel.unary_unary(
          '/people.People/GetAlumniPerson',
          request_serializer=GetPersonRequest.SerializeToString,
          response_deserializer=AlumniPerson.FromString,
          )
      self.AuthAlumniPerson = channel.unary_unary(
          '/people.People/AuthAlumniPerson',
          request_serializer=AuthPersonRequest.SerializeToString,
          response_deserializer=AuthPersonResponse.FromString,
          )
      self.ListAlumniPeople = channel.unary_stream(
          '/people.People/ListAlumniPeople',
          request_serializer=ListPeopleRequest.SerializeToString,
          response_deserializer=AlumniPerson.FromString,
          )
      self.CreateAlumniPerson = channel.unary_unary(
          '/people.People/CreateAlumniPerson',
          request_serializer=CreateAlumniPersonRequest.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.ModifyAlumniPerson = channel.unary_unary(
          '/people.People/ModifyAlumniPerson',
          request_serializer=ModifyAlumniPersonRequest.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.DeletePreserveAlumniPerson = channel.unary_unary(
          '/people.People/DeletePreserveAlumniPerson',
          request_serializer=WrappedUsername.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.UndeletePreservedAlumniPerson = channel.unary_unary(
          '/people.People/UndeletePreservedAlumniPerson',
          request_serializer=WrappedUsername.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.ModifyServiceAccount = channel.unary_unary(
          '/people.People/ModifyServiceAccount',
          request_serializer=ModifyServiceAccountRequest.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.CheckLiveness = channel.unary_unary(
          '/people.People/CheckLiveness',
          request_serializer=Empty.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.CheckReadiness = channel.unary_unary(
          '/people.People/CheckReadiness',
          request_serializer=Empty.SerializeToString,
          response_deserializer=Empty.FromString,
          )


  class PeopleServicer(object):
    """An API key must be provided in an "authorization" header in GRPC metadata.

    """

    def GetEthPerson(self, request, context):
      """ETH person

      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AuthEthPerson(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetVisPerson(self, request, context):
      """VIS person

      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AuthVisPerson(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListVisPeople(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CreateVisPerson(self, request, context):
      """requires privileged API key
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ModifyVisPerson(self, request, context):
      """requires privileged API key
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeletePreserveVisPerson(self, request, context):
      """DeletePreserveVisPerson deletes the specified VIS internal account.
      The deletion which moves the person to a "preserved" section in the
      storage backend, instead of actually deleting them.
      *Preserved people loose all their group memberships.*
      Preserved people look deleted in all API calls, except UndeletePreserveVisPerson.
      Background jobs or manual intervention may or may not eventually delete the person.
      If only a sort time has passed, it should normally be possible to recover the
      preserved person using UndeletePreservedVisPerson.
      If the person doesn't exist or is already "preserved" this RPC will fail.
      requires privileged API key
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UndeletePreservedVisPerson(self, request, context):
      """UndeletePreservedVisPerson reverses the effect of DeletePreserveVisPerson
      (except that all group memberships are lost).
      If the person has already been permanently deleted (eg. manually directly
      in the data store, or by a cleanup service), undeletion will fail.
      If the person doesn't exist this RPC will fail.
      When a person is preserved, their username stays reserved (no new user can be
      created with that username, until the preserved user is permanently deleted).
      Due to implementation constraints, *calling this on preserved Alumni users
      will convert them to VIS users, do not do this.*
      requires privileged API key
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAlumniPerson(self, request, context):
      """Alumni person (VIS alumni)

      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AuthAlumniPerson(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListAlumniPeople(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CreateAlumniPerson(self, request, context):
      """requires privileged API key
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ModifyAlumniPerson(self, request, context):
      """requires privileged API key
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeletePreserveAlumniPerson(self, request, context):
      """DeletePreserveAlumniPerson deletes the specified VIS internal account.
      The deletion which moves the person to a "preserved" section in the
      storage backend, instead of actually deleting them.
      *Preserved people loose all their group memberships.*
      Preserved people look deleted in all API calls, except UndeletePreserveAlumniPerson.
      Background jobs or manual intervention may or may not eventually delete the person.
      If only a sort time has passed, it should normally be possible to recover the
      preserved person using UndeletePreservedAlumniPerson.
      If the person doesn't exist or is already "preserved" this RPC will fail.
      requires privileged API key
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UndeletePreservedAlumniPerson(self, request, context):
      """UndeletePreservedAlumniPerson reverses the effect of DeletePreserveAlumniPerson
      (except that all group memberships are lost).
      If the person has already been permanently deleted (eg. manually directly
      in the data store, or by a cleanup service), undeletion will fail.
      If the person doesn't exist this RPC will fail.
      When a person is preserved, their username stays reserved (no new user can be
      created with that username, until the preserved user is permanently deleted).
      Due to implementation constraints, *calling this on preserved VIS users
      will convert them to Alumni users, do not do this.*
      requires privileged API key
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ModifyServiceAccount(self, request, context):
      """Service account

      ModifyServiceAccount is not something you should use.
      It is made specifically for mailman to update email addresses in
      FreeIPA which are required to correctly route emails for mailing lists.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CheckLiveness(self, request, context):
      """Miscellaneous

      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CheckReadiness(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_PeopleServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetEthPerson': grpc.unary_unary_rpc_method_handler(
            servicer.GetEthPerson,
            request_deserializer=GetPersonRequest.FromString,
            response_serializer=EthPerson.SerializeToString,
        ),
        'AuthEthPerson': grpc.unary_unary_rpc_method_handler(
            servicer.AuthEthPerson,
            request_deserializer=AuthPersonRequest.FromString,
            response_serializer=AuthPersonResponse.SerializeToString,
        ),
        'GetVisPerson': grpc.unary_unary_rpc_method_handler(
            servicer.GetVisPerson,
            request_deserializer=GetPersonRequest.FromString,
            response_serializer=VisPerson.SerializeToString,
        ),
        'AuthVisPerson': grpc.unary_unary_rpc_method_handler(
            servicer.AuthVisPerson,
            request_deserializer=AuthPersonRequest.FromString,
            response_serializer=AuthPersonResponse.SerializeToString,
        ),
        'ListVisPeople': grpc.unary_stream_rpc_method_handler(
            servicer.ListVisPeople,
            request_deserializer=ListPeopleRequest.FromString,
            response_serializer=VisPerson.SerializeToString,
        ),
        'CreateVisPerson': grpc.unary_unary_rpc_method_handler(
            servicer.CreateVisPerson,
            request_deserializer=CreateVisPersonRequest.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'ModifyVisPerson': grpc.unary_unary_rpc_method_handler(
            servicer.ModifyVisPerson,
            request_deserializer=ModifyVisPersonRequest.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'DeletePreserveVisPerson': grpc.unary_unary_rpc_method_handler(
            servicer.DeletePreserveVisPerson,
            request_deserializer=WrappedUsername.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'UndeletePreservedVisPerson': grpc.unary_unary_rpc_method_handler(
            servicer.UndeletePreservedVisPerson,
            request_deserializer=WrappedUsername.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'GetAlumniPerson': grpc.unary_unary_rpc_method_handler(
            servicer.GetAlumniPerson,
            request_deserializer=GetPersonRequest.FromString,
            response_serializer=AlumniPerson.SerializeToString,
        ),
        'AuthAlumniPerson': grpc.unary_unary_rpc_method_handler(
            servicer.AuthAlumniPerson,
            request_deserializer=AuthPersonRequest.FromString,
            response_serializer=AuthPersonResponse.SerializeToString,
        ),
        'ListAlumniPeople': grpc.unary_stream_rpc_method_handler(
            servicer.ListAlumniPeople,
            request_deserializer=ListPeopleRequest.FromString,
            response_serializer=AlumniPerson.SerializeToString,
        ),
        'CreateAlumniPerson': grpc.unary_unary_rpc_method_handler(
            servicer.CreateAlumniPerson,
            request_deserializer=CreateAlumniPersonRequest.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'ModifyAlumniPerson': grpc.unary_unary_rpc_method_handler(
            servicer.ModifyAlumniPerson,
            request_deserializer=ModifyAlumniPersonRequest.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'DeletePreserveAlumniPerson': grpc.unary_unary_rpc_method_handler(
            servicer.DeletePreserveAlumniPerson,
            request_deserializer=WrappedUsername.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'UndeletePreservedAlumniPerson': grpc.unary_unary_rpc_method_handler(
            servicer.UndeletePreservedAlumniPerson,
            request_deserializer=WrappedUsername.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'ModifyServiceAccount': grpc.unary_unary_rpc_method_handler(
            servicer.ModifyServiceAccount,
            request_deserializer=ModifyServiceAccountRequest.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'CheckLiveness': grpc.unary_unary_rpc_method_handler(
            servicer.CheckLiveness,
            request_deserializer=Empty.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'CheckReadiness': grpc.unary_unary_rpc_method_handler(
            servicer.CheckReadiness,
            request_deserializer=Empty.FromString,
            response_serializer=Empty.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'people.People', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaPeopleServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """An API key must be provided in an "authorization" header in GRPC metadata.

    """
    def GetEthPerson(self, request, context):
      """ETH person

      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AuthEthPerson(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetVisPerson(self, request, context):
      """VIS person

      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AuthVisPerson(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListVisPeople(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CreateVisPerson(self, request, context):
      """requires privileged API key
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ModifyVisPerson(self, request, context):
      """requires privileged API key
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeletePreserveVisPerson(self, request, context):
      """DeletePreserveVisPerson deletes the specified VIS internal account.
      The deletion which moves the person to a "preserved" section in the
      storage backend, instead of actually deleting them.
      *Preserved people loose all their group memberships.*
      Preserved people look deleted in all API calls, except UndeletePreserveVisPerson.
      Background jobs or manual intervention may or may not eventually delete the person.
      If only a sort time has passed, it should normally be possible to recover the
      preserved person using UndeletePreservedVisPerson.
      If the person doesn't exist or is already "preserved" this RPC will fail.
      requires privileged API key
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UndeletePreservedVisPerson(self, request, context):
      """UndeletePreservedVisPerson reverses the effect of DeletePreserveVisPerson
      (except that all group memberships are lost).
      If the person has already been permanently deleted (eg. manually directly
      in the data store, or by a cleanup service), undeletion will fail.
      If the person doesn't exist this RPC will fail.
      When a person is preserved, their username stays reserved (no new user can be
      created with that username, until the preserved user is permanently deleted).
      Due to implementation constraints, *calling this on preserved Alumni users
      will convert them to VIS users, do not do this.*
      requires privileged API key
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAlumniPerson(self, request, context):
      """Alumni person (VIS alumni)

      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AuthAlumniPerson(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListAlumniPeople(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CreateAlumniPerson(self, request, context):
      """requires privileged API key
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ModifyAlumniPerson(self, request, context):
      """requires privileged API key
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeletePreserveAlumniPerson(self, request, context):
      """DeletePreserveAlumniPerson deletes the specified VIS internal account.
      The deletion which moves the person to a "preserved" section in the
      storage backend, instead of actually deleting them.
      *Preserved people loose all their group memberships.*
      Preserved people look deleted in all API calls, except UndeletePreserveAlumniPerson.
      Background jobs or manual intervention may or may not eventually delete the person.
      If only a sort time has passed, it should normally be possible to recover the
      preserved person using UndeletePreservedAlumniPerson.
      If the person doesn't exist or is already "preserved" this RPC will fail.
      requires privileged API key
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UndeletePreservedAlumniPerson(self, request, context):
      """UndeletePreservedAlumniPerson reverses the effect of DeletePreserveAlumniPerson
      (except that all group memberships are lost).
      If the person has already been permanently deleted (eg. manually directly
      in the data store, or by a cleanup service), undeletion will fail.
      If the person doesn't exist this RPC will fail.
      When a person is preserved, their username stays reserved (no new user can be
      created with that username, until the preserved user is permanently deleted).
      Due to implementation constraints, *calling this on preserved VIS users
      will convert them to Alumni users, do not do this.*
      requires privileged API key
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ModifyServiceAccount(self, request, context):
      """Service account

      ModifyServiceAccount is not something you should use.
      It is made specifically for mailman to update email addresses in
      FreeIPA which are required to correctly route emails for mailing lists.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CheckLiveness(self, request, context):
      """Miscellaneous

      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CheckReadiness(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaPeopleStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """An API key must be provided in an "authorization" header in GRPC metadata.

    """
    def GetEthPerson(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """ETH person

      """
      raise NotImplementedError()
    GetEthPerson.future = None
    def AuthEthPerson(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AuthEthPerson.future = None
    def GetVisPerson(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """VIS person

      """
      raise NotImplementedError()
    GetVisPerson.future = None
    def AuthVisPerson(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AuthVisPerson.future = None
    def ListVisPeople(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def CreateVisPerson(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """requires privileged API key
      """
      raise NotImplementedError()
    CreateVisPerson.future = None
    def ModifyVisPerson(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """requires privileged API key
      """
      raise NotImplementedError()
    ModifyVisPerson.future = None
    def DeletePreserveVisPerson(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """DeletePreserveVisPerson deletes the specified VIS internal account.
      The deletion which moves the person to a "preserved" section in the
      storage backend, instead of actually deleting them.
      *Preserved people loose all their group memberships.*
      Preserved people look deleted in all API calls, except UndeletePreserveVisPerson.
      Background jobs or manual intervention may or may not eventually delete the person.
      If only a sort time has passed, it should normally be possible to recover the
      preserved person using UndeletePreservedVisPerson.
      If the person doesn't exist or is already "preserved" this RPC will fail.
      requires privileged API key
      """
      raise NotImplementedError()
    DeletePreserveVisPerson.future = None
    def UndeletePreservedVisPerson(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """UndeletePreservedVisPerson reverses the effect of DeletePreserveVisPerson
      (except that all group memberships are lost).
      If the person has already been permanently deleted (eg. manually directly
      in the data store, or by a cleanup service), undeletion will fail.
      If the person doesn't exist this RPC will fail.
      When a person is preserved, their username stays reserved (no new user can be
      created with that username, until the preserved user is permanently deleted).
      Due to implementation constraints, *calling this on preserved Alumni users
      will convert them to VIS users, do not do this.*
      requires privileged API key
      """
      raise NotImplementedError()
    UndeletePreservedVisPerson.future = None
    def GetAlumniPerson(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Alumni person (VIS alumni)

      """
      raise NotImplementedError()
    GetAlumniPerson.future = None
    def AuthAlumniPerson(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AuthAlumniPerson.future = None
    def ListAlumniPeople(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def CreateAlumniPerson(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """requires privileged API key
      """
      raise NotImplementedError()
    CreateAlumniPerson.future = None
    def ModifyAlumniPerson(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """requires privileged API key
      """
      raise NotImplementedError()
    ModifyAlumniPerson.future = None
    def DeletePreserveAlumniPerson(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """DeletePreserveAlumniPerson deletes the specified VIS internal account.
      The deletion which moves the person to a "preserved" section in the
      storage backend, instead of actually deleting them.
      *Preserved people loose all their group memberships.*
      Preserved people look deleted in all API calls, except UndeletePreserveAlumniPerson.
      Background jobs or manual intervention may or may not eventually delete the person.
      If only a sort time has passed, it should normally be possible to recover the
      preserved person using UndeletePreservedAlumniPerson.
      If the person doesn't exist or is already "preserved" this RPC will fail.
      requires privileged API key
      """
      raise NotImplementedError()
    DeletePreserveAlumniPerson.future = None
    def UndeletePreservedAlumniPerson(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """UndeletePreservedAlumniPerson reverses the effect of DeletePreserveAlumniPerson
      (except that all group memberships are lost).
      If the person has already been permanently deleted (eg. manually directly
      in the data store, or by a cleanup service), undeletion will fail.
      If the person doesn't exist this RPC will fail.
      When a person is preserved, their username stays reserved (no new user can be
      created with that username, until the preserved user is permanently deleted).
      Due to implementation constraints, *calling this on preserved VIS users
      will convert them to Alumni users, do not do this.*
      requires privileged API key
      """
      raise NotImplementedError()
    UndeletePreservedAlumniPerson.future = None
    def ModifyServiceAccount(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Service account

      ModifyServiceAccount is not something you should use.
      It is made specifically for mailman to update email addresses in
      FreeIPA which are required to correctly route emails for mailing lists.
      """
      raise NotImplementedError()
    ModifyServiceAccount.future = None
    def CheckLiveness(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Miscellaneous

      """
      raise NotImplementedError()
    CheckLiveness.future = None
    def CheckReadiness(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CheckReadiness.future = None


  def beta_create_People_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('people.People', 'AuthAlumniPerson'): AuthPersonRequest.FromString,
      ('people.People', 'AuthEthPerson'): AuthPersonRequest.FromString,
      ('people.People', 'AuthVisPerson'): AuthPersonRequest.FromString,
      ('people.People', 'CheckLiveness'): Empty.FromString,
      ('people.People', 'CheckReadiness'): Empty.FromString,
      ('people.People', 'CreateAlumniPerson'): CreateAlumniPersonRequest.FromString,
      ('people.People', 'CreateVisPerson'): CreateVisPersonRequest.FromString,
      ('people.People', 'DeletePreserveAlumniPerson'): WrappedUsername.FromString,
      ('people.People', 'DeletePreserveVisPerson'): WrappedUsername.FromString,
      ('people.People', 'GetAlumniPerson'): GetPersonRequest.FromString,
      ('people.People', 'GetEthPerson'): GetPersonRequest.FromString,
      ('people.People', 'GetVisPerson'): GetPersonRequest.FromString,
      ('people.People', 'ListAlumniPeople'): ListPeopleRequest.FromString,
      ('people.People', 'ListVisPeople'): ListPeopleRequest.FromString,
      ('people.People', 'ModifyAlumniPerson'): ModifyAlumniPersonRequest.FromString,
      ('people.People', 'ModifyServiceAccount'): ModifyServiceAccountRequest.FromString,
      ('people.People', 'ModifyVisPerson'): ModifyVisPersonRequest.FromString,
      ('people.People', 'UndeletePreservedAlumniPerson'): WrappedUsername.FromString,
      ('people.People', 'UndeletePreservedVisPerson'): WrappedUsername.FromString,
    }
    response_serializers = {
      ('people.People', 'AuthAlumniPerson'): AuthPersonResponse.SerializeToString,
      ('people.People', 'AuthEthPerson'): AuthPersonResponse.SerializeToString,
      ('people.People', 'AuthVisPerson'): AuthPersonResponse.SerializeToString,
      ('people.People', 'CheckLiveness'): Empty.SerializeToString,
      ('people.People', 'CheckReadiness'): Empty.SerializeToString,
      ('people.People', 'CreateAlumniPerson'): Empty.SerializeToString,
      ('people.People', 'CreateVisPerson'): Empty.SerializeToString,
      ('people.People', 'DeletePreserveAlumniPerson'): Empty.SerializeToString,
      ('people.People', 'DeletePreserveVisPerson'): Empty.SerializeToString,
      ('people.People', 'GetAlumniPerson'): AlumniPerson.SerializeToString,
      ('people.People', 'GetEthPerson'): EthPerson.SerializeToString,
      ('people.People', 'GetVisPerson'): VisPerson.SerializeToString,
      ('people.People', 'ListAlumniPeople'): AlumniPerson.SerializeToString,
      ('people.People', 'ListVisPeople'): VisPerson.SerializeToString,
      ('people.People', 'ModifyAlumniPerson'): Empty.SerializeToString,
      ('people.People', 'ModifyServiceAccount'): Empty.SerializeToString,
      ('people.People', 'ModifyVisPerson'): Empty.SerializeToString,
      ('people.People', 'UndeletePreservedAlumniPerson'): Empty.SerializeToString,
      ('people.People', 'UndeletePreservedVisPerson'): Empty.SerializeToString,
    }
    method_implementations = {
      ('people.People', 'AuthAlumniPerson'): face_utilities.unary_unary_inline(servicer.AuthAlumniPerson),
      ('people.People', 'AuthEthPerson'): face_utilities.unary_unary_inline(servicer.AuthEthPerson),
      ('people.People', 'AuthVisPerson'): face_utilities.unary_unary_inline(servicer.AuthVisPerson),
      ('people.People', 'CheckLiveness'): face_utilities.unary_unary_inline(servicer.CheckLiveness),
      ('people.People', 'CheckReadiness'): face_utilities.unary_unary_inline(servicer.CheckReadiness),
      ('people.People', 'CreateAlumniPerson'): face_utilities.unary_unary_inline(servicer.CreateAlumniPerson),
      ('people.People', 'CreateVisPerson'): face_utilities.unary_unary_inline(servicer.CreateVisPerson),
      ('people.People', 'DeletePreserveAlumniPerson'): face_utilities.unary_unary_inline(servicer.DeletePreserveAlumniPerson),
      ('people.People', 'DeletePreserveVisPerson'): face_utilities.unary_unary_inline(servicer.DeletePreserveVisPerson),
      ('people.People', 'GetAlumniPerson'): face_utilities.unary_unary_inline(servicer.GetAlumniPerson),
      ('people.People', 'GetEthPerson'): face_utilities.unary_unary_inline(servicer.GetEthPerson),
      ('people.People', 'GetVisPerson'): face_utilities.unary_unary_inline(servicer.GetVisPerson),
      ('people.People', 'ListAlumniPeople'): face_utilities.unary_stream_inline(servicer.ListAlumniPeople),
      ('people.People', 'ListVisPeople'): face_utilities.unary_stream_inline(servicer.ListVisPeople),
      ('people.People', 'ModifyAlumniPerson'): face_utilities.unary_unary_inline(servicer.ModifyAlumniPerson),
      ('people.People', 'ModifyServiceAccount'): face_utilities.unary_unary_inline(servicer.ModifyServiceAccount),
      ('people.People', 'ModifyVisPerson'): face_utilities.unary_unary_inline(servicer.ModifyVisPerson),
      ('people.People', 'UndeletePreservedAlumniPerson'): face_utilities.unary_unary_inline(servicer.UndeletePreservedAlumniPerson),
      ('people.People', 'UndeletePreservedVisPerson'): face_utilities.unary_unary_inline(servicer.UndeletePreservedVisPerson),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_People_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('people.People', 'AuthAlumniPerson'): AuthPersonRequest.SerializeToString,
      ('people.People', 'AuthEthPerson'): AuthPersonRequest.SerializeToString,
      ('people.People', 'AuthVisPerson'): AuthPersonRequest.SerializeToString,
      ('people.People', 'CheckLiveness'): Empty.SerializeToString,
      ('people.People', 'CheckReadiness'): Empty.SerializeToString,
      ('people.People', 'CreateAlumniPerson'): CreateAlumniPersonRequest.SerializeToString,
      ('people.People', 'CreateVisPerson'): CreateVisPersonRequest.SerializeToString,
      ('people.People', 'DeletePreserveAlumniPerson'): WrappedUsername.SerializeToString,
      ('people.People', 'DeletePreserveVisPerson'): WrappedUsername.SerializeToString,
      ('people.People', 'GetAlumniPerson'): GetPersonRequest.SerializeToString,
      ('people.People', 'GetEthPerson'): GetPersonRequest.SerializeToString,
      ('people.People', 'GetVisPerson'): GetPersonRequest.SerializeToString,
      ('people.People', 'ListAlumniPeople'): ListPeopleRequest.SerializeToString,
      ('people.People', 'ListVisPeople'): ListPeopleRequest.SerializeToString,
      ('people.People', 'ModifyAlumniPerson'): ModifyAlumniPersonRequest.SerializeToString,
      ('people.People', 'ModifyServiceAccount'): ModifyServiceAccountRequest.SerializeToString,
      ('people.People', 'ModifyVisPerson'): ModifyVisPersonRequest.SerializeToString,
      ('people.People', 'UndeletePreservedAlumniPerson'): WrappedUsername.SerializeToString,
      ('people.People', 'UndeletePreservedVisPerson'): WrappedUsername.SerializeToString,
    }
    response_deserializers = {
      ('people.People', 'AuthAlumniPerson'): AuthPersonResponse.FromString,
      ('people.People', 'AuthEthPerson'): AuthPersonResponse.FromString,
      ('people.People', 'AuthVisPerson'): AuthPersonResponse.FromString,
      ('people.People', 'CheckLiveness'): Empty.FromString,
      ('people.People', 'CheckReadiness'): Empty.FromString,
      ('people.People', 'CreateAlumniPerson'): Empty.FromString,
      ('people.People', 'CreateVisPerson'): Empty.FromString,
      ('people.People', 'DeletePreserveAlumniPerson'): Empty.FromString,
      ('people.People', 'DeletePreserveVisPerson'): Empty.FromString,
      ('people.People', 'GetAlumniPerson'): AlumniPerson.FromString,
      ('people.People', 'GetEthPerson'): EthPerson.FromString,
      ('people.People', 'GetVisPerson'): VisPerson.FromString,
      ('people.People', 'ListAlumniPeople'): AlumniPerson.FromString,
      ('people.People', 'ListVisPeople'): VisPerson.FromString,
      ('people.People', 'ModifyAlumniPerson'): Empty.FromString,
      ('people.People', 'ModifyServiceAccount'): Empty.FromString,
      ('people.People', 'ModifyVisPerson'): Empty.FromString,
      ('people.People', 'UndeletePreservedAlumniPerson'): Empty.FromString,
      ('people.People', 'UndeletePreservedVisPerson'): Empty.FromString,
    }
    cardinalities = {
      'AuthAlumniPerson': cardinality.Cardinality.UNARY_UNARY,
      'AuthEthPerson': cardinality.Cardinality.UNARY_UNARY,
      'AuthVisPerson': cardinality.Cardinality.UNARY_UNARY,
      'CheckLiveness': cardinality.Cardinality.UNARY_UNARY,
      'CheckReadiness': cardinality.Cardinality.UNARY_UNARY,
      'CreateAlumniPerson': cardinality.Cardinality.UNARY_UNARY,
      'CreateVisPerson': cardinality.Cardinality.UNARY_UNARY,
      'DeletePreserveAlumniPerson': cardinality.Cardinality.UNARY_UNARY,
      'DeletePreserveVisPerson': cardinality.Cardinality.UNARY_UNARY,
      'GetAlumniPerson': cardinality.Cardinality.UNARY_UNARY,
      'GetEthPerson': cardinality.Cardinality.UNARY_UNARY,
      'GetVisPerson': cardinality.Cardinality.UNARY_UNARY,
      'ListAlumniPeople': cardinality.Cardinality.UNARY_STREAM,
      'ListVisPeople': cardinality.Cardinality.UNARY_STREAM,
      'ModifyAlumniPerson': cardinality.Cardinality.UNARY_UNARY,
      'ModifyServiceAccount': cardinality.Cardinality.UNARY_UNARY,
      'ModifyVisPerson': cardinality.Cardinality.UNARY_UNARY,
      'UndeletePreservedAlumniPerson': cardinality.Cardinality.UNARY_UNARY,
      'UndeletePreservedVisPerson': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'people.People', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
