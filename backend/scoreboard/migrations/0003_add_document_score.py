# Generated by Django 3.0.2 on 2020-03-28 11:18

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ("scoreboard", "0002_add_user_score"),
    ]

    sql = """
    CREATE OR REPLACE VIEW scoreboard_userscore (id, user_id, upvotes, downvotes, document_likes) AS
        SELECT row_number() OVER () as id,
            au.id AS user_id,
            (SELECT COUNT(*) FROM answers_answer_upvotes aav INNER JOIN answers_answer aa ON (aa.id = aav.answer_id) WHERE aa.author_id = au.id AND aa.is_legacy_answer = false),
            (SELECT COUNT(*) FROM answers_answer_downvotes aav INNER JOIN answers_answer aa ON (aa.id = aav.answer_id) WHERE aa.author_id = au.id AND aa.is_legacy_answer = false),
            (SELECT COUNT(*) FROM documents_document_likes ddl INNER JOIN documents_document dd ON(ddl.document_id = dd.id) WHERE dd.author_id = au.id)
        FROM auth_user au
    ;
    """

    reverse = """
    CREATE OR REPLACE VIEW scoreboard_userscore (id, user_id, upvotes, downvotes) AS
        SELECT row_number() OVER () as id,
            au.id AS user_id,
            (SELECT COUNT(*) FROM answers_answer_upvotes aav INNER JOIN answers_answer aa ON (aa.id = aav.answer_id) WHERE aa.author_id = au.id AND aa.is_legacy_answer = false),
            (SELECT COUNT(*) FROM answers_answer_downvotes aav INNER JOIN answers_answer aa ON (aa.id = aav.answer_id) WHERE aa.author_id = au.id AND aa.is_legacy_answer = false)
        FROM auth_user au
    ;
    """

    operations = [migrations.RunSQL(sql, reverse_sql=reverse)]
